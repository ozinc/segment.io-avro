{
  "namespace": "com.oz.segmentio.avro",
  "type": "record",
  "name": "PlaybackEvent",
  "fields": [
    {
      "name": "anonymousId",
      "type": [
        "null",
        "string"
      ],
      "doc": "A pseudo-unique substitute for a User ID, for cases when you don\\’t have an absolutely unique identifier"
    },
    {
      "name": "context",
      "type": [
        "null",
        "Context"
      ],
      "doc": "Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale."
    },
    {
      "name": "integrations",
      "type": [
        "null",
        {
          "type": "map",
          "values": "boolean"
          //Note: Keys need to be validated elsewhere
        }
      ],
      "doc": "Dictionary of destinations to either enable or disable"
    },
    {
      "name": "messageId",
      "type": [
        "null",
        "string"
      ],
      "doc": "Automatically collected by Segment, a unique identifier for each message that lets you find an individual message across the API"
    },
    {
      "name": "receivedAt",
      "type": [
        "null",
        "string"
      ],
      "doc": "Automatically set by Segment, the timestamp of when a message is received by Segment. It is an ISO-8601 date string."
    },
    {
      "name": "sentAt",
      "type": [
        "null",
        "string"
      ],
      "doc": "Timestamp of when a message is sent to Segment, used for clock skew correction It is set automatically by the Segment tracking libraries. It is an ISO-8601 date string."
    },
    {
      "name": "timestamp",
      "type": [
        "null",
        "string"
      ],
      "doc": "Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API. It is an ISO-8601 date string. If the event just happened, leave it out and we’ll use the server’s time. If you’re importing data from the past, make sure you to provide a timestamp."
    },
    {
      "name": "type",
      "type": [
        "null",
        "string"
      ],
      "doc": "Type of message, corresponding to the API method: 'identify', 'group', 'track', 'page', 'screen' or 'alias'"
    },
    {
      "name": "userId",
      "type": [
        "null",
        "string"
      ],
      "doc": "Unique identifier for the user in your database. A userId or anonymousId is required."
    },
    {
      "name": "version",
      "type": [
        "null",
        "string"
      ],
      "doc": "Version of the Tracking API that received the message, automatically set by Segment."
    },
    {
      "name": "event",
      "type": [
        "null",
        "string"
      ],
      "doc": "Name of the action that a user has performed."
    },
    /* ========================= Specific fields start below =================== */
    {
      "name": "properties",
      "type": {
        "name": "PlaybackEventProperties",
        "type": "record",
        "fields": [
          {
            "name": "session_id",
            "type": "string",
            "doc": "The unique ID of the overall session used to tie all events generated from a specific playback. This value should be same across all playback, content, and ad events if they are from the same playback session"
          },
          {
            "name": "content_asset_ids",
            "type": [
              {
                "type": "array",
                "items": "string"
              },
              "null"
            ],
            "doc": "The Content Asset Id(s) of the video/videos playing or about to be played in the video player. For Video Playback Started events only, you should send the plural form with an Array of unique asset IDs. For all other playback events, you should send the singular form with the ID of the current content asset playing at the time of the event."
          },
          {
            "name": "content_asset_id",
            "type": [
              "string",
              "null"
            ],
            "doc": "The Content Asset Id(s) of the video/videos playing or about to be played in the video player. For Video Playback Started events only, you should send the plural form with an Array of unique asset IDs. For all other playback events, you should send the singular form with the ID of the current content asset playing at the time of the event."
          },
          {
            "name": "content_pod_ids",
            "type": [
              "null",
              {
                "type": "array",
                "items": "string"
              }
            ]
          },
          {
            "name": "content_pod_id",
            "type": [
              "string",
              "null"
            ],
            "doc": "The Content Pod Id(s) of the video/videos playing or about to be played in the video player. For Video Playback Started events only, you should send the plural form with an Array of unique pod IDs. For all other playback events, you should send the singular form with the ID of the current content pod playing at the time of the event."
          },
          {
            "name": "ad_asset_id",
            "type": {
              "type": "array",
              // Only accept array here, JSON accepts flat string too
              "items": "string"
            },
            "doc": "The Ad Asset Id(s) of the ad/ads playing or about to be played in the video player. For Video Playback Started events only, you should send an Array of unique ad asset IDs. For all other playback events, you should send a string with the ID of the current ad asset playing at the time of the event."
          },
          {
            "name": "ad_pod_id",
            "type": {
              "type": "array",
              // Only accept array here, JSON accepts flat string too
              "items": "string"
            },
            "doc": "The Ad Pod Id(s) of the ad/ads playing or about to be played in the video player. For Video Playback Started events only, you should send an Array of unique ad pod IDs. For all other playback events, you should send a string with the ID of the current ad pod playing at the time of the event."
          },
          {
            "name": "ad_type",
            "type": {
              "type": "array",
              "items": "AdType"
            },
            "doc": "The type of ad playing at the time of the event. Values can include ‘pre-roll’, ‘mid-roll’, and ‘post-roll’."
          },
          {
            "name": "position",
            "type": "int",
            "doc": "The current index position in seconds of the playhead. If the playback is a livestream, you must send a negative integer that represents the offset in seconds in relation to the current timestamp. For example, if content is being livestreamed at 8PM but the viewer is 30 seconds behind, the value of this property should be -30."
          },
          {
            "name": "seek_position",
            "type": [
              "null",
              "int"
            ],
            "doc": "The index position in seconds of the playhead where the user is seeking to. Only needed on Video Playback Seek Started events, since on Video Playback Seek Completed, the seek_position should be the position."
          },
          {
            "name": "total_length",
            "type": "int",
            "doc": "The total duration of the playback in seconds. This should include the duration of all your content and ad included in this playback session. For livestream playback, send null."
          },
          {
            "name": "bitrate",
            "type": "int",
            "doc": "The current kbps."
          },
          {
            "name": "framerate",
            "type": "float",
            "doc": "The average fps."
          },
          {
            "name": "video_player",
            "type": "string",
            "doc": "The name of the video player (ie ‘youtube’, ‘vimeo’)."
          },
          {
            "name": "sound",
            "type": "int",
            "doc": "The sound level of the playback represented in a 0 to 100 scale where 0 is muted and 100 is full volume."
          },
          {
            "name": "full_screen",
            "type": "boolean",
            "doc": "true if playback is currently in full screen mode and false otherwise."
          },
          {
            "name": "ad_enabled",
            "type": "boolean",
            "doc": "false if the user has adblock or any other ad blockers, true otherwise if they can view your video ads."
          },
          {
            "name": "quality",
            "type": "string",
            "doc": "The quality of the video, ie. ‘highres’, ‘hd1080’, ‘480p’."
          },
          {
            "name": "method",
            "type": [
              "null",
              "string"
            ],
            "doc": "For Video Playback Interrupted events only, you can send this property denoting how the playback was interrupted (ie. ‘browser redirect’, ‘device lock’, ‘call’)."
          },
          {
            "name": "livestream",
            "type": "boolean",
            "doc": "If the playback will be a livetream, send true, otherwise false."
          }
        ]
      }
    }
  ]
}

