{
  "namespace": "com.oz.segmentio.avro",
  "type": "record",
  "name": "Group",
  "_type": "group",
  "fields": [
    {
      "name": "anonymousId",
      "type": [
        "null",
        "string"
      ],
      "doc": "A pseudo-unique substitute for a User ID, for cases when you don\\’t have an absolutely unique identifier"
    },
    {
      "name": "context",
      "type": [
        "null",
        "Context"
      ],
      "doc": "Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale."
    },
    {
      "name": "integrations",
      "type": [
        "null",
        {
          "type": "map",
          "values": "boolean"
          //Note: Keys need to be validated elsewhere
        }
      ],
      "doc": "Dictionary of destinations to either enable or disable"
    },
    {
      "name": "messageId",
      "type": [
        "null",
        "string"
      ],
      "doc": "Automatically collected by Segment, a unique identifier for each message that lets you find an individual message across the API"
    },
    {
      "name": "receivedAt",
      "type": [
        "null",
        "string"
      ],
      "doc": "Automatically set by Segment, the timestamp of when a message is received by Segment. It is an ISO-8601 date string."
    },
    {
      "name": "sentAt",
      "type": [
        "null",
        "string"
      ],
      "doc": "Timestamp of when a message is sent to Segment, used for clock skew correction It is set automatically by the Segment tracking libraries. It is an ISO-8601 date string."
    },
    {
      "name": "timestamp",
      "type": [
        "null",
        "string"
      ],
      "doc": "Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API. It is an ISO-8601 date string. If the event just happened, leave it out and we’ll use the server’s time. If you’re importing data from the past, make sure you to provide a timestamp."
    },
    {
      "name": "type",
      "type": [
        "null",
        "string"
      ],
      "doc": "Type of message, corresponding to the API method: 'identify', 'group', 'track', 'page', 'screen' or 'alias'"
    },
    {
      "name": "userId",
      "type": [
        "null",
        "string"
      ],
      "doc": "Unique identifier for the user in your database. A userId or anonymousId is required."
    },
    {
      "name": "version",
      "type": [
        "null",
        "string"
      ],
      "doc": "Version of the Tracking API that received the message, automatically set by Segment."
    },
    {
      "name": "event",
      "type": [
        "null",
        "string"
      ],
      "doc": "Name of the action that a user has performed."
    },
    /* ========================= Specific fields start below =================== */
    {
      "name": "channel",
      "type": [
        "null",
        "string"
      ],
      "doc": "This field is not officially documented, it was only found in the Group example."
    },
    {
      "name": "groupId",
      "type": "string",
      "doc": "A unique identifier for the group in your database."
    },
    {
      "name": "traits",
      "doc": "Free-form dictionary of traits of the group, like email or name",
      "type": [
        {
          "type": "record",
          "name": "GroupTraits",
          "fields": [
            {
              "name": "address",
              "type": [
                "null",
                "Address"
              ],
              "doc": "Street address of a group"
            },
            {
              "name": "avatar",
              "type": [
                "null",
                "string"
              ],
              "doc": "URL to an avatar image for the group"
            },
            {
              "name": "createdAt",
              "type": [
                "null",
                "string"
              ],
              "doc": "Date the group’s account was first created. We recommend ISO-8601 date strings, but also accept Unix timestamps for convenience."
            },
            {
              "name": "description",
              "type": [
                "null",
                "string"
              ],
              "doc": "Description of the group, like their personal bio"
            },
            {
              "name": "email",
              "type": [
                "null",
                "string"
              ],
              "doc": "Email address of group"
            },
            {
              "name": "employees",
              "type": [
                "null",
                //TODO: Docs claim string here, that's not coherent with the example
                "int"
              ],
              "doc": "Number of employees of a group, typically used for companies"
            },
            {
              "name": "id",
              "type": [
                "null",
                "string"
              ],
              "doc": "Unique ID in your database for a group"
            },
            {
              "name": "industry",
              "type": "string",
              "doc": "Industry a user works in, or a group is part of"
            },
            {
              "name": "name",
              "type": "string",
              "doc": "Name of a group"
            },
            {
              "name": "phone",
              "type": [
                "null",
                "string"
              ],
              "doc": "Phone number of a group"
            },
            {
              "name": "website",
              "type": [
                "null",
                "string"
              ],
              "doc": "Website of a group"
            },
            {
              "name": "plan",
              "type": "string",
              "doc": "Plan that a group is in"
            },
            {
              "name": "total__escape_space__billed",
              "type": [
                "null",
                "float"
              ],
              "doc": "This field is not officially documented, it was only found in the Group example.\n Moreover this field is named 'total billed' in JSON"
            }
          ]
        },
        "null"
      ]
    },
    {
      "name": "properties",
      // JSON encoded hash of additional properties
      "type": [
        "null",
        "string"
      ]
    }
  ]
}
